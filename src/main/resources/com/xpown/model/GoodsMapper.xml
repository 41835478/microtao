<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xpown.model.GoodsMapper">
	<resultMap id="BaseResultMap" type="com.xpown.model.Goods">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="goodsId" jdbcType="VARCHAR" property="goodsId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="introduce" jdbcType="VARCHAR" property="introduce" />
		<result column="pic" jdbcType="VARCHAR" property="pic" />
		<result column="category" jdbcType="INTEGER" property="category" />
		<result column="link" jdbcType="VARCHAR" property="link" />
		<result column="quanlink" jdbcType="VARCHAR" property="quanlink" />
		<result column="appkey" jdbcType="VARCHAR" property="appkey" />
		<result column="createTime" jdbcType="DATE" property="createTime" />

	</resultMap>
	<sql id="Base_Column_List">
		id, goodsId, title, introduce,pic,category,link, quanlink, appkey,createTime
	</sql>

	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from goods
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="getGoodsList" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from goods
		where createTime &lt; #{createTime,jdbcType=TIMESTAMP}
		<if test="appkey != null">
			and appkey = #{appkey,jdbcType=VARCHAR}
		</if>
		<if test="category != null">
			and category = #{category,jdbcType=VARCHAR}
		</if>
		order by createTime desc limit #{pageSize,jdbcType=INTEGER}
	</select>

	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from goods
		where id
		=
		#{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="map" keyProperty="id"
		useGeneratedKeys="true">
		insert into goods
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="goodsId != null">
				goodsId,
			</if>
			<if test="introduce != null">
				introduce,
			</if>
			<if test="pic != null">
				pic,
			</if>
			<if test="category != null">
				category,
			</if>
			<if test="link != null">
				link,
			</if>
			<if test="quanlink != null">
				quanlink,
			</if>
			<if test="appkey != null">
				appkey,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="goodsId != null">
				#{goodsId,jdbcType=VARCHAR},
			</if>
			<if test="introduce != null">
				#{introduce,jdbcType=VARCHAR},
			</if>
			<if test="pic != null">
				#{pic,jdbcType=VARCHAR},
			</if>
			<if test="category != null">
				#{category,jdbcType=INTEGER},
			</if>
			<if test="link != null">
				#{link,jdbcType=VARCHAR},
			</if>
			<if test="quanlink != null">
				#{quanlink,jdbcType=VARCHAR},
			</if>
			<if test="appkey != null">
				#{appkey,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="updateById" parameterType="com.xpown.model.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null and age!=''">
				age = #{age,jdbcType=INTEGER},
			</if>
			<!-- <if test="passwd != null"> passwd = #{passwd,jdbcType=VARCHAR}, </if> -->
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<!-- <if test="phone != null"> phone = #{phone,jdbcType=VARCHAR}, </if> -->
			<if test="passwd != null">
				passwd = #{passwd,jdbcType=VARCHAR},
			</if>
			<!-- <if test="email != null"> email = #{email,jdbcType=VARCHAR}, </if> -->
			<if test="sign != null">
				sign = #{sign,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				regtime = #{regtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logintime != null">
				logintime = #{logintime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				qq = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="avator != null">
				avator = #{avator,jdbcType=VARCHAR},
			</if>
			<if test="local != null">
				local = #{local,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=VARCHAR},
			</if>
			<if test="honor != null">
				honor = #{honor,jdbcType=VARCHAR},
			</if>
			<if test="learntime != null">
				learntime = #{learntime,jdbcType=VARCHAR},
			</if>
			<if test="examtype != null">
				examtype = #{examtype,jdbcType=VARCHAR},
			</if>
			<if test="isActive != null and isActive != ''">
				isActive = #{isActive,jdbcType=INTEGER},
			</if>
			<if test="realName != null">
				realName = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="coin != null">
				coin = #{coin,jdbcType=VARCHAR}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER} or phone = #{phone,jdbcType=VARCHAR}
	</update>


	<update id="getBatchQuartz">
		update sign set antCoin = (antCoin - 1) ;
	</update>

	<update id="updateUserVIPTime" parameterType="map">
		update user
		<set>
			<if test="vipTime != null">
				vipTime = #{vipTime,jdbcType=DATE},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}

	</update>

</mapper>